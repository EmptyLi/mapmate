% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{pad_frames}
\alias{pad_frames}
\title{Pad the end of list of data frames}
\usage{
pad_frames(x, n.period = 360, rotation = "add", force = TRUE)
}
\arguments{
\item{x}{list of data frames.}

\item{n.period}{An integer, the known period of rotation that will be part of an animation in which the map data frames in \code{x} will be sequentially plotted over. Default is 360 (1-degree increment rotations).}

\item{rotation}{character, one of \code{"add"} or \code{"pad"}.}

\item{force}{}
}
\value{
returns \code{x} but padded with it's final element appended repeatedly based on a specified period and type of padding method.
}
\description{
Use recycling to pad the end of a list of data frames where data frame elements in the list repeat in a cyclical pattern.
}
\details{
\code{pad_frames} is used on lists of data frames where sequence of data frames contains content that repeats over the list.
It is used in cases where the data frames contain map data (long, lat, and z), for example describing the visible hemisphere surface of a rotating globe.
The number of iterations in a full rotation may not be factorable by the length of the time series of map data (length of list).
For example, a rotating globe animation may complete 10 rotations with 60 frames per rotation, using 600 frames total,
but the list \code{x} may contain 550 data frames.
With \code{rotation="pad"}, the last data frame in \code{x} is recycled to pad the series out to 600 frames so that the animation can display
and "hang" on the terminal map data set until a final complete rotation is completed.
With \code{rotation="add"}, a full period is added to the end of the \code{x} rather than padding only far enough to make the length of the data series factorable by the rotation period length.
}
\examples{
# not run
}

